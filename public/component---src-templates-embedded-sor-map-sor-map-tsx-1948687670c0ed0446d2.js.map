{"version":3,"file":"component---src-templates-embedded-sor-map-sor-map-tsx-1948687670c0ed0446d2.js","mappings":"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","sources":["webpack://sod/./src/components/charts/map/sor/tooltip-body/sor-map-chart-tooltip-body.tsx","webpack://sod/./src/components/charts/map/sor/sor-map-chart.tsx","webpack://sod/./src/components/share-container/share-container.tsx","webpack://sod/./src/components/social-metadata/social-metadata-enum.tsx","webpack://sod/./src/components/social-metadata/social-metadata.tsx","webpack://sod/./src/templates/embedded/sor-map/sor-map.tsx","webpack://sod/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://sod/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://sod/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://sod/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport BaseComponent from '../../../../../base/base-component';\nimport { closeSVG } from '../../../../../global/svg/close';\nimport { ISORMapChartTooltipBodyProperties } from './sor-map-chart-tooltip-body-interface';\nimport './sor-map-chart-tooltip-body.scss';\n\nexport default class SORMapChartTooltipBody extends BaseComponent<ISORMapChartTooltipBodyProperties> {\n  public render(): ReactNode {\n    const { currentStateData } = this.props;\n\n    return (\n      <div className=\"sor-map-tooltip\">\n        <div className=\"sor-map-tooltip__title\">\n          {currentStateData.state}\n          {this.isMobileDevice() && (\n            <button\n              type=\"button\"\n              aria-label=\"Close\"\n              onClick={(): void => {\n                this.props.removeTooltipContent();\n              }}\n            >\n              {closeSVG}\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Fragment, ReactChild, ReactNode } from 'react';\nimport { Geography } from 'react-simple-maps';\nimport BaseComponent from '../../../../base/base-component';\nimport { SORGradeColor } from '../../../../global/grade-color-enum';\nimport MapChart from '../map-chart';\nimport {\n  ISORMapChartData,\n  ISORMapChartProperties,\n  ISORMapChartState,\n} from './sor-map-chart-interface';\nimport SORMapChartTooltipBody from './tooltip-body/sor-map-chart-tooltip-body';\n\nexport default class SORMapChart extends BaseComponent<\n  ISORMapChartProperties,\n  ISORMapChartState\n> {\n  public constructor(properties: ISORMapChartProperties) {\n    super(properties);\n\n    this.state = {};\n  }\n\n  private getSORColorData(value: number): SORGradeColor {\n    switch (value) {\n      case 0:\n        return SORGradeColor.LOW;\n      case 1:\n        return SORGradeColor.MEDIUM;\n      case 2:\n        return SORGradeColor.HIGH;\n      default:\n        return SORGradeColor.LOW;\n    }\n  }\n\n  private setTooltipContent(currentState: ISORMapChartData): void {\n    this.setState({\n      currentStateData: currentState,\n    });\n  }\n\n  private removeTooltipContent(): void {\n    this.setState({\n      currentStateData: undefined,\n    });\n  }\n\n  public render(): ReactNode {\n    const { data, isTooltip, dataType } = this.props;\n    const { currentStateData } = this.state;\n    const {\n      all: { nodes },\n    } = data;\n\n    return (\n      <MapChart\n        isTooltip={isTooltip}\n        tooltipBody={(): ReactChild => {\n          return currentStateData ? (\n            <SORMapChartTooltipBody\n              currentStateData={currentStateData}\n              dataType={dataType}\n              removeTooltipContent={(): void => {\n                this.removeTooltipContent();\n              }}\n            />\n          ) : (\n            ''\n          );\n        }}\n      >\n        {({ geographies }) =>\n          geographies.map((geo) => {\n            const currentState = nodes.find(\n              (s) => s.state === geo.properties.name\n            );\n\n            console.log(dataType);\n            return (\n              <Fragment key={geo.rsmKey}>\n                <Geography\n                  geography={geo}\n                  stroke=\"#fff\"\n                  onMouseEnter={(event): void => {\n                    isTooltip && this.setTooltipContent(currentState);\n\n                    event.currentTarget.getBoundingClientRect();\n                  }}\n                  onMouseLeave={(): void => {\n                    isTooltip && this.removeTooltipContent();\n                  }}\n                  onTouchStart={(): void => {\n                    this.setTooltipContent(currentState);\n                  }}\n                  style={{\n                    default: {\n                      fill: this.getSORColorData(\n                        Number(currentState?.[dataType])\n                      ),\n                      outline: 'none',\n                    },\n                    hover: {\n                      fill: 'current',\n                      outline: 'none',\n                      cursor: 'pointer',\n                      strokeWidth: 2,\n                      opacity: 1,\n                      position: 'relative',\n                      zIndex: 9,\n                    },\n                    pressed: {\n                      fill: '#E42',\n                      outline: 'none',\n                    },\n                  }}\n                />\n              </Fragment>\n            );\n          })\n        }\n      </MapChart>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport { IShareContainerProperties } from './share-container-interface';\n\nexport default class ShareContainer extends BaseComponent<IShareContainerProperties> {\n  public render(): ReactNode {\n    const { children, shareName, ...restProperties } = this.props;\n\n    return (\n      <div data-id=\"share\" data-name={shareName} {...restProperties}>\n        {children}\n      </div>\n    );\n  }\n}\n","export enum SocialMetadataType {\n  SUMMARY = 'summary',\n  SUMMARY_LARGE_IMAGE = 'summary_large_image',\n  OBJECT = 'object',\n}\n","import React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport BaseComponent from '../../base/base-component';\nimport { SocialMetadataType } from './social-metadata-enum';\nimport { ISocialMetadataProperties } from './social-metadata-interface';\n\nexport default class SocialMetadata extends BaseComponent<ISocialMetadataProperties> {\n  public render(): ReactNode {\n    const { title, description, imageResourceFileName, type } = this.props;\n    const imageSourceContent: string = `${this.getResourcesPath()}/${imageResourceFileName}`;\n\n    return (\n      <Helmet\n        meta={[\n          {\n            property: 'og:title',\n            content: title,\n          },\n          {\n            property: 'og:type',\n            content: SocialMetadataType.OBJECT,\n          },\n          {\n            property: 'og:description',\n            content: description,\n          },\n          {\n            property: 'og:image',\n            content: imageSourceContent,\n          },\n          {\n            name: 'twitter:card',\n            content: type,\n          },\n          {\n            name: 'twitter:title',\n            content: title,\n          },\n          {\n            name: 'twitter:image:src',\n            content: imageSourceContent,\n          },\n          {\n            name: 'twitter:description',\n            content: description,\n          },\n        ]}\n      />\n    );\n  }\n\n  protected getResourcesPath(): string {\n    return `${process.env.SITE_URL}`;\n  }\n}\n","import { graphql, Link } from 'gatsby';\nimport React, { Fragment, ReactNode } from 'react';\nimport BaseComponent from '../../../base/base-component';\nimport StateOfReformMapChart from '../../../components/charts/map/sor/sor-map-chart';\nimport ContainerBox from '../../../components/container-box/container-box';\nimport ShareContainer from '../../../components/share-container/share-container';\nimport SocialMetadata from '../../../components/social-metadata/social-metadata';\nimport { SocialMetadataType } from '../../../components/social-metadata/social-metadata-enum';\nimport SvgIcon from '../../../components/svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../../../components/svg-icon/svg-icon-enum';\nimport { Route } from '../../../global/route-enum';\nimport { IEmbeddedSORMapProperties } from './sor-map-interface';\n\nexport default class EmbeddedSORMap extends BaseComponent<IEmbeddedSORMapProperties> {\n  protected declareTranslateCollection(): string {\n    return 'overallMapTemplate';\n  }\n\n  public render(): ReactNode {\n    const { data, pageContext } = this.props;\n    const { dataType } = pageContext;\n\n    return (\n      <Fragment>\n        <SocialMetadata\n          type={SocialMetadataType.SUMMARY}\n          title={` USA ${dataType}`}\n          description=\"\"\n          imageResourceFileName={`embedded-sor-${dataType}-map.png`}\n        />\n        <ContainerBox className=\"c-section--embed\">\n          <ShareContainer\n            className=\"c-embed__wrap\"\n            shareName={`sor-${dataType}-map`}\n          >\n            <div className=\"c-embed__box\">\n              <h2 className=\"c-score__title\">{this.translate('title')}</h2>\n              <StateOfReformMapChart data={data} dataType={dataType} />\n            </div>\n            <div className=\"c-embed__logo\">\n              <Link to={Route.HOME}>\n                <SvgIcon\n                  width=\"111\"\n                  viewBox=\"0 0 208 44\"\n                  paths={[\n                    {\n                      command: SvgIconPathCommand.STATE_OF_DEMOCRACY,\n                      fill: '#0D0C0D',\n                    },\n                    {\n                      fillRule: 'evenodd',\n                      clipRule: 'evenodd',\n                      command: SvgIconPathCommand.LOGO_EAST,\n                      fill: '#C7AFF0',\n                    },\n                    {\n                      fillRule: 'evenodd',\n                      clipRule: 'evenodd',\n                      command: SvgIconPathCommand.LOGO_WEST,\n                      fill: '#4A1D96',\n                    },\n                  ]}\n                />\n              </Link>\n            </div>\n          </ShareContainer>\n        </ContainerBox>\n      </Fragment>\n    );\n  }\n}\n\nexport const query = graphql`\n  query GetStateOfReformEmbeddedData {\n    all: allSheetDataSor {\n      nodes {\n        rcv\n        state\n        code\n        primaries\n        irc\n        id\n        voteAtHome\n      }\n    }\n  }\n`;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["SORMapChartTooltipBody","render","currentStateData","this","props","className","state","isMobileDevice","type","onClick","removeTooltipContent","closeSVG","BaseComponent","SORMapChart","properties","getSORColorData","value","SORGradeColor","setTooltipContent","currentState","setState","undefined","data","isTooltip","dataType","nodes","all","tooltipBody","geographies","map","geo","find","s","name","console","log","Fragment","key","rsmKey","Geography","geography","stroke","onMouseEnter","event","currentTarget","getBoundingClientRect","onMouseLeave","onTouchStart","style","default","fill","Number","outline","hover","cursor","strokeWidth","opacity","position","zIndex","pressed","ShareContainer","children","shareName","restProperties","SocialMetadataType","SocialMetadata","title","description","imageResourceFileName","imageSourceContent","getResourcesPath","meta","property","content","process","EmbeddedSORMap","declareTranslateCollection","pageContext","translate","Link","to","Route","width","viewBox","paths","command","SvgIconPathCommand","fillRule","clipRule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys","indexOf"],"sourceRoot":""}