{"version":3,"file":"component---src-pages-media-index-tsx-084821ee82a2a72bb22f.js","mappings":"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","sources":["webpack://sod/./src/components/bread-crumb/bread-crumb.tsx","webpack://sod/./src/components/join-us/join-us.tsx","webpack://sod/./src/components/media-item-grid/media-item-grid.tsx","webpack://sod/./src/components/media-post-item/media-post-item.tsx","webpack://sod/./src/components/solid-button/solid-button-enum.tsx","webpack://sod/./src/components/solid-button/solid-button.tsx","webpack://sod/./src/components/solid-link/solid-link-enum.tsx","webpack://sod/./src/components/solid-link/solid-link.tsx","webpack://sod/./src/components/media-new-item/media-new-item.tsx","webpack://sod/./src/components/media-post-item-triple/media-post-item-triple.tsx","webpack://sod/./src/pages/media/index.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React, { ReactNode } from \"react\";\nimport BaseComponent from \"../../base/base-component\";\nimport SvgIcon from \"../svg-icon/svg-icon\";\nimport { SvgIconPathCommand } from \"../svg-icon/svg-icon-enum\";\nimport { IBreadCrumbProperties, ICrumbItem } from \"./bread-crumb-interface\";\nimport \"./bread-crumb.scss\";\n\nexport default class BreadCrumb extends BaseComponent<IBreadCrumbProperties> {\n  public render(): ReactNode {\n    const { crumbItems } = this.props;\n\n    return (\n      <ul className=\"c-breadcrumb\">\n        {crumbItems.map((crumb: ICrumbItem, index: number) => {\n          return (\n            <li key={index}>\n              <Link to={crumb.location}> {crumb.label} </Link>\n              <SvgIcon\n                width=\"6\"\n                height=\"10\"\n                viewBox=\"0 0 6 10\"\n                paths={[\n                  {\n                    command: SvgIconPathCommand.CHEVRON_RIGHT,\n                    fill: \"#0D0C0D\",\n                  },\n                ]}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport GravityForm from '../gravity-forms/gravity-forms';\nimport { IJoinUsProps } from './join-us-interface';\nimport './join-us.scss';\n\nexport default class JoinUs extends BaseComponent<IJoinUsProps> {\n  public render(): ReactNode {\n    const { form } = this.props;\n    return (\n      <div className=\"c-joinus\">\n        <div className=\"row c-joinus__wrapper\">\n          <div className=\"col-lg-6 c-joinus__col\">\n            <h3 className=\"c-joinus__title\">Join us</h3>\n            <p className=\"c-joinus__text\">\n              Stay up to date on our movement, and learn how you can get\n              involved and make a difference.\n            </p>\n          </div>\n          <div className=\"col-lg-6 c-joinus__col\">\n            <GravityForm form={form} formClassName=\"c-form-newsletter\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport MediaPostItem from '../media-post-item/media-post-item';\nimport SolidButton from '../solid-button/solid-button';\nimport {\n  IMediaItemGridProperties,\n  IMediaItemGridState,\n} from './media-item-grid-interface';\n\nexport default class MediaItemGrid extends BaseComponent<\n  IMediaItemGridProperties,\n  IMediaItemGridState\n> {\n  public constructor(props: IMediaItemGridProperties) {\n    super(props);\n\n    this.state = {\n      latestIndex:\n        props.showMoreCount > props.items.length\n          ? props.items.length\n          : props.showMoreCount,\n    };\n  }\n\n  public render(): ReactNode {\n    const { items, showMoreCount } = this.props;\n    const { latestIndex } = this.state;\n    let showMoreItems = [];\n\n    if (latestIndex >= 0) {\n      showMoreItems = items.slice(0, latestIndex);\n    }\n    return (\n      <div className='c-media-posts'>\n        {showMoreItems.length > 0 && (\n          <div className=\"row c-posts-all\">\n            {showMoreItems.map((mediaItem, index) => {\n              return <MediaPostItem item={mediaItem} key={index} />;\n            })}\n          </div>\n        )}\n\n        {latestIndex < items.length - 1 && (\n          <SolidButton\n            onClick={(): void => {\n              this.setState((prevState) => {\n                return {\n                  latestIndex:\n                    prevState.latestIndex + showMoreCount > items.length\n                      ? items.length\n                      : prevState.latestIndex + showMoreCount,\n                };\n              });\n            }}\n          >\n            Show More\n          </SolidButton>\n        )}\n      </div>\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport SolidLink from '../solid-link/solid-link';\nimport { SolidLinkColorSchemas } from '../solid-link/solid-link-enum';\nimport SvgIcon from '../svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../svg-icon/svg-icon-enum';\nimport {\n  IMediaPostItemProperties,\n  IMediaPostItemStates,\n} from './media-post-item-interface';\n\nexport default class MediaPostItem extends BaseComponent<\n  IMediaPostItemProperties,\n  IMediaPostItemStates\n> {\n  public constructor(props: IMediaPostItemProperties) {\n    super(props);\n    this.state = {\n      imageIsReady: false,\n    };\n  }\n\n  componentDidMount(): void {\n    const img = new Image();\n    img.onload = () => this.setState({ imageIsReady: true });\n    img.src = this.props.item.featuredImage?.node.sourceUrl;\n  }\n  public render(): ReactNode {\n    const { item } = this.props;\n    const { imageIsReady } = this.state;\n\n    return (\n      <div className=\"col-lg-3 col-md-6 card c-card_items\">\n        <div className=\"c-card__container\">\n          <div className=\"media media--transparent media--card media--hover-effect c-card__img\">\n            {imageIsReady ? (\n              <img\n                srcSet={item.featuredImage?.node.srcSet}\n                sizes=\"(min-width: 1504px) 702px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)\"\n                src={item.featuredImage?.node.sourceUrl}\n                alt={item.featuredImage?.node.altText}\n                loading=\"lazy\"\n                width={item.featuredImage?.node.mediaDetails.width}\n                height={item.featuredImage?.node.mediaDetails.height}\n              />\n            ) : (\n              <div className=\"loading-overlay__spinner\">\n                <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" className=\"spinner\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n                </svg>\n              </div>\n            )}\n            <Link\n              className=\"c-link\"\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n            ></Link>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              {item.categories?.nodes[0].name}\n            </SolidLink>\n          </div>\n          <div className=\"c-media-featured__wrapper\">\n            <div className=\"c-card__details\">\n              <span>{new Date(item.date).toDateString()}</span>\n              <span>BY {item.author?.node.name}</span>\n            </div>\n            <h6 className=\"c-card__title\">\n              <Link\n                className=\"c-link\"\n                to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              >\n                {item.title}\n              </Link>\n            </h6>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              Read More\n              <SvgIcon\n                width=\"13\"\n                viewBox=\"0 0 20 14\"\n                paths={[\n                  { command: SvgIconPathCommand.ARROW_RIGHT, fill: '#4A1D96' },\n                ]}\n              />\n            </SolidLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SolidButtonColorSchemas {\n  PURPLE = \"purple\",\n  WHITE = \"white\",\n  TRANSPARENT = \"transparent\",\n}\n","import React, { ReactNode } from \"react\";\nimport BaseComponent from \"../../base/base-component\";\nimport { SolidButtonColorSchemas } from \"./solid-button-enum\";\nimport { ISolidButtonProperties } from \"./solid-button-interface\";\nimport \"./solid-button.scss\";\n\nexport default class SolidButton extends BaseComponent<ISolidButtonProperties> {\n  public render(): ReactNode {\n    const { colorSchema = SolidButtonColorSchemas.PURPLE } = this.props;\n    const schemaClass: string = `is-${colorSchema}`;\n    const classNames: string = [\"c-btn\", schemaClass].join(\" \");\n\n    return (\n      <button className={classNames} type=\"button\" onClick={this.props.onClick}>\n        {this.props.children}\n      </button>\n    );\n  }\n}\n","export enum SolidLinkColorSchemas {\n  PURPLE = 'purple',\n  WHITE = 'white',\n  TRANSPARENT = 'transparent',\n  HIGHLIGHTED = 'highlighted',\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport { SolidLinkColorSchemas } from './solid-link-enum';\nimport { ISolidLinkProperties } from './solid-link-interface';\nimport './solid-link.scss';\n\nexport default class SolidLink extends BaseComponent<ISolidLinkProperties> {\n  public render(): ReactNode {\n    const { colorSchema = SolidLinkColorSchemas.PURPLE, to } = this.props;\n    const schemaClass: string = `is-${colorSchema}`;\n    const classNames: string = ['c-btn', schemaClass].join(' ');\n\n    return (\n      <Link className={classNames} to={to}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport SolidLink from '../solid-link/solid-link';\nimport { SolidLinkColorSchemas } from '../solid-link/solid-link-enum';\nimport SvgIcon from '../svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../svg-icon/svg-icon-enum';\nimport {\n  IMediaNewItemProperties,\n  IMediaNewItemStates,\n} from './media-new-item-interface';\n\nexport default class MediaNewItem extends BaseComponent<\n  IMediaNewItemProperties,\n  IMediaNewItemStates\n> {\n  public constructor(props: IMediaNewItemProperties) {\n    super(props);\n    this.state = {\n      imageIsReady: false,\n    };\n  }\n\n  componentDidMount(): void {\n    const img = new Image();\n    img.onload = () => this.setState({ imageIsReady: true });\n    img.src = this.props.item.featuredImage?.node.sourceUrl;\n  }\n  public render(): ReactNode {\n    const { item } = this.props;\n    const { imageIsReady } = this.state;\n\n    return (\n      <div className=\"row c-media-featured card\">\n        <div className=\"col-lg-6 c-media-featured__col\">\n          <div className=\"media media--transparent media--featured media--hover-effect c-media__img\">\n            {imageIsReady ? (\n              <img\n                srcSet={item?.featuredImage?.node.srcSet}\n                sizes=\"(min-width: 1504px) 702px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)\"\n                src={item?.featuredImage?.node.sourceUrl}\n                alt={item?.featuredImage?.node.altText}\n                loading=\"lazy\"\n                width={item?.featuredImage?.node.mediaDetails.width}\n                height={item?.featuredImage?.node.mediaDetails.height}\n              />\n            ) : (\n              <div className=\"loading-overlay__spinner\">\n                <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" className=\"spinner\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n                </svg>\n              </div>\n            )}\n            <Link\n              className=\"c-link\"\n              to={`/media${item?.categories?.nodes[0].uri}${item?.slug}`}\n            ></Link>\n          </div>\n        </div>\n        <div className=\"col-lg-6 c-media-featured__col\">\n          <div className=\"c-media-featured__wrapper\">\n            <div className=\"c-media-featured__details\">\n              <SolidLink to={`/media${item?.categories?.nodes[0].uri}`}>\n                {item?.categories.nodes[0].name}\n              </SolidLink>\n              <span>{new Date(item?.date).toLocaleDateString()}</span>\n              <span>BY {item?.author.node.name}</span>\n            </div>\n            <h1 className=\"c-media-featured__title\">\n              <Link\n                className=\"c-link\"\n                to={`/media${item?.categories?.nodes[0].uri}${item?.slug}`}\n              >\n                {item?.title}\n              </Link>\n            </h1>\n            <div className=\"s-content\">\n              <p>\n                There’s nothing quite like an off-year election — and thanks to\n                the rapid adoption of ranked choice voting across the country,\n                there’s really never been anything quite like this year’s\n                election.\n              </p>\n            </div>\n            <SolidLink\n              to={`/media${item?.categories?.nodes[0].uri}${item?.slug}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              Read More\n              <SvgIcon\n                width=\"13\"\n                viewBox=\"0 0 20 14\"\n                paths={[\n                  {\n                    command: SvgIconPathCommand.ARROW_RIGHT,\n                    fill: '#4A1D96',\n                  },\n                ]}\n              />\n            </SolidLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport SolidLink from '../solid-link/solid-link';\nimport { SolidLinkColorSchemas } from '../solid-link/solid-link-enum';\nimport SvgIcon from '../svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../svg-icon/svg-icon-enum';\nimport {\n  IMediaPostItemTripleProperties,\n  IMediaPostItemTripleStates,\n} from './media-post-item-triple-interface';\n\nexport default class MediaPostItemTriple extends BaseComponent<\n  IMediaPostItemTripleProperties,\n  IMediaPostItemTripleStates\n> {\n  public constructor(props: IMediaPostItemTripleProperties) {\n    super(props);\n    this.state = { imageIsReady: false };\n  }\n  componentDidMount(): void {\n    const img = new Image();\n    img.onload = () => this.setState({ imageIsReady: true });\n    img.src = this.props.item.featuredImage?.node.sourceUrl;\n  }\n  public render(): ReactNode {\n    const { item } = this.props;\n    const { imageIsReady } = this.state;\n    return (\n      <div className=\"col-lg-4 col-md-6 card c-card_items\">\n        <div className=\"c-card__container\">\n          <div className=\"media media--transparent media--card media--hover-effect c-card__img\">\n            {imageIsReady ? (\n              <img\n                srcSet={item.featuredImage?.node.srcSet}\n                sizes='(min-width: 1504px) 702px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)'\n                src={item.featuredImage?.node.sourceUrl}\n                alt={item.featuredImage?.node.altText}\n                loading=\"lazy\"\n                width={item.featuredImage?.node.mediaDetails.width}\n                height={item.featuredImage?.node.mediaDetails.height}/>\n            ) : (\n              <div className=\"loading-overlay__spinner\">\n                <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" className=\"spinner\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n                </svg>\n              </div>\n            )}\n            <Link\n              className=\"c-link\"\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n            ></Link>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              {item.categories?.nodes[0].name}\n            </SolidLink>\n          </div>\n          <div className=\"c-media-featured__wrapper\">\n            <div className=\"c-card__details\">\n              <span>{new Date(item.date).toDateString()}</span>\n              <span>BY {item.author?.node.name}</span>\n            </div>\n            <h6 className=\"c-card__title\">\n              <Link\n                className=\"c-link\"\n                to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              >\n                {item.title}\n              </Link>\n            </h6>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              Read More\n              <SvgIcon\n                width=\"13\"\n                viewBox=\"0 0 20 14\"\n                paths={[\n                  { command: SvgIconPathCommand.ARROW_RIGHT, fill: '#4A1D96' },\n                ]}\n              />\n            </SolidLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import { graphql } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport BreadCrumb from '../../components/bread-crumb/bread-crumb';\nimport ContainerBox from '../../components/container-box/container-box';\nimport JoinUs from '../../components/join-us/join-us';\nimport MediaItemGrid from '../../components/media-item-grid/media-item-grid';\nimport MediaNewItem from '../../components/media-new-item/media-new-item';\nimport MediaPostItemTriple from '../../components/media-post-item-triple/media-post-item-triple';\nimport MediaPostItem from '../../components/media-post-item/media-post-item';\nimport WordPressPageLayout from '../../components/wordpress-page-layout/wordpress-page-layout';\nimport { IMediaPageProperties } from '../../global/wordpress-page/media/media-interface';\nimport { IWordPressPost } from '../../global/wordpress-page/wordpress-page-interface';\nimport './media.scss';\nexport default class Media extends BaseComponent<IMediaPageProperties> {\n  private mediaItems: IWordPressPost[];\n  private latestMediaItems: IWordPressPost[];\n  private firstRowMediaItems: IWordPressPost[];\n\n  private latestMediaItemsCount = 0;\n  private firstRowMediaItemsCount = 0;\n\n  private newestMediaItem: IWordPressPost;\n\n  public constructor(props: IMediaPageProperties) {\n    super(props);\n\n    const { mediaItems } = props.data;\n\n    this.generatePosts(mediaItems.nodes);\n  }\n\n  protected declareTranslateCollection(): string {\n    return 'media';\n  }\n\n  public render(): ReactNode {\n    const { [0]: form } = this.props.data.form.nodes;\n\n    return (\n      <WordPressPageLayout title={this.translate('pageTitle')}>\n        <ContainerBox className=\"c-section--pageheader\">\n          <div className=\"c-pageheader\">\n            <BreadCrumb\n              crumbItems={[\n                {\n                  label: 'State of Democracy',\n                  location: '/',\n                },\n                {\n                  label: 'Media',\n                  location: '/media',\n                },\n              ]}\n            />\n            <div className=\"c-section\">\n              <h1 className=\"c-section__title\">Media</h1>\n            </div>\n          </div>\n        </ContainerBox>\n        <ContainerBox className=\"c-section--featured u-media-width\">\n          <MediaNewItem item={this.newestMediaItem} />\n          {this.latestMediaItems.length > 0 && (\n            <div className=\"row \">\n              {this.latestMediaItems.map((mediaItem, index) => {\n                return <MediaPostItem item={mediaItem} key={index} />;\n              })}\n            </div>\n          )}\n        </ContainerBox>\n        <ContainerBox className=\"c-section--joinus u-media-width\">\n          <JoinUs form={form} />\n        </ContainerBox>\n        <ContainerBox className=\"c-section--triple u-media-width\">\n          {this.firstRowMediaItems.length > 0 && (\n            <div className=\"row\">\n              {this.firstRowMediaItems.map((mediaItem, index) => {\n                return <MediaPostItemTriple item={mediaItem} key={index} />;\n              })}\n            </div>\n          )}\n        </ContainerBox>\n        <ContainerBox className=\"c-section--allposts u-media-width\">\n          <MediaItemGrid\n            items={this.mediaItems.slice(\n              1 + this.latestMediaItemsCount + this.firstRowMediaItemsCount\n            )}\n            showMoreCount={8}\n          />\n        </ContainerBox>\n      </WordPressPageLayout>\n    );\n  }\n\n  private generatePosts(mediaItems: IWordPressPost[]): void {\n    // this.mediaItems = mediaItems;\n    // this.newestMediaItem = mediaItems.splice(0, 1)[0];\n    // const latestMediaItemsCount = mediaItems.length > 4 ? 4 : mediaItems.length;\n    // this.latestMediaItems = mediaItems.splice(0, latestMediaItemsCount);\n    // const firstRowMediaItemsCount =\n    //   mediaItems.length > 3 ? 3 : mediaItems.length;\n    // this.firstRowMediaItems = mediaItems.splice(0, firstRowMediaItemsCount);\n\n    /* using slice instead of splice to prevent modified media items array \n    when use back button or  click on media page link for multiple times */\n    this.mediaItems = mediaItems;\n    this.newestMediaItem = mediaItems[0];\n    this.latestMediaItemsCount =\n      mediaItems.length - 1 > 4 ? 4 : mediaItems.length - 1;\n    this.latestMediaItems = mediaItems.slice(1, this.latestMediaItemsCount + 1);\n    this.firstRowMediaItemsCount =\n      mediaItems.length - (this.latestMediaItemsCount + 1) > 3\n        ? 3\n        : mediaItems.length - (this.latestMediaItemsCount + 1);\n    this.firstRowMediaItems = mediaItems.slice(\n      this.latestMediaItemsCount + 1,\n      this.firstRowMediaItemsCount + this.latestMediaItemsCount + 1\n    );\n  }\n}\n\nexport const query = graphql`\n  query MediaItemsQuery {\n    form: allGfForm(filter: { slug: { eq: \"join-us\" } }) {\n      nodes {\n        apiURL\n        formFields {\n          isRequired\n          label\n          type\n          placeholder\n          id\n          cssClass\n        }\n        title\n        button {\n          text\n        }\n      }\n    }\n    mediaItems: allWpPost(sort: { order: DESC, fields: date }) {\n      nodes {\n        uri\n        title\n        slug\n        id\n        content\n        featuredImage {\n          node {\n            sourceUrl\n            altText\n            srcSet\n            sizes\n            mediaDetails {\n              height\n              width\n            }\n          }\n        }\n        author {\n          node {\n            name\n          }\n        }\n        date\n        categories {\n          nodes {\n            name\n            uri\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BreadCrumb","render","crumbItems","this","props","className","map","crumb","index","key","Link","to","location","label","width","height","viewBox","paths","command","SvgIconPathCommand","fill","BaseComponent","JoinUs","form","formClassName","MediaItemGrid","state","latestIndex","showMoreCount","items","length","showMoreItems","slice","mediaItem","item","onClick","setState","prevState","MediaPostItem","imageIsReady","componentDidMount","img","Image","onload","src","featuredImage","node","sourceUrl","srcSet","sizes","alt","altText","loading","mediaDetails","focusable","role","xmlns","strokeWidth","cx","cy","r","categories","nodes","uri","slug","colorSchema","SolidLinkColorSchemas","name","Date","date","toDateString","author","title","SolidButtonColorSchemas","SolidButton","classNames","join","type","children","SolidLink","MediaNewItem","toLocaleDateString","MediaPostItemTriple","Media","latestMediaItemsCount","firstRowMediaItemsCount","mediaItems","data","generatePosts","declareTranslateCollection","translate","newestMediaItem","latestMediaItems","firstRowMediaItems"],"sourceRoot":""}