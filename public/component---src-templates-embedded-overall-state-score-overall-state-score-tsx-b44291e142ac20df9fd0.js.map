{"version":3,"file":"component---src-templates-embedded-overall-state-score-overall-state-score-tsx-b44291e142ac20df9fd0.js","mappings":"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","sources":["webpack://sod/./src/components/share-container/share-container.tsx","webpack://sod/./src/components/states/state-score/state-score.tsx","webpack://sod/./src/components/states/state-overall-score/state-overall-score.tsx","webpack://sod/./src/templates/embedded/overall-state-score/overall-state-score.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport { IShareContainerProperties } from './share-container-interface';\n\nexport default class ShareContainer extends BaseComponent<IShareContainerProperties> {\n  public render(): ReactNode {\n    const { children, shareName, ...restProperties } = this.props;\n\n    return (\n      <div\n        data-id=\"share\"\n        data-name={shareName}\n        {...restProperties}\n        style={{\n          pointerEvents: 'none',\n        }}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../../base/base-component';\nimport CycleScoreChart from '../../charts/cycle-score/cycle-score';\nimport { ICycleScoreChartPoint } from '../../charts/cycle-score/cycle-score-interface';\nimport Grade from '../../grade/grade';\nimport { GradeSize } from '../../grade/grade-enum';\nimport { IStateScoreProperties } from './state-score-interface';\nimport './state-score.scss';\n\nexport default class StateScore extends BaseComponent<IStateScoreProperties> {\n  public render(): ReactNode {\n    const {\n      title = 'Overall Score',\n      description,\n      overallGrade,\n      overallScore,\n      cycleScores,\n    } = this.props;\n\n    const chartData: ICycleScoreChartPoint[] = cycleScores.map(\n      (cycleScore): ICycleScoreChartPoint => {\n        return {\n          cycle: cycleScore.cycle,\n          score: cycleScore.score,\n          weight: cycleScore.weight,\n        };\n      }\n    );\n\n    console.log('DESC', description);\n    return (\n      <div className=\"c-state__score\">\n        <h3 className=\"c-score__title\">{title}</h3>\n        <div className=\"c-score__details\">\n          <div className=\"c-score__wrap\">\n            <div className=\"c-grade__wrap\">\n              <Grade grade={overallGrade} size={GradeSize.LARGE} />\n              <span>{overallScore}</span>\n            </div>\n            {description && <div className=\"c-scrore__desc\">{description}</div>}\n          </div>\n          {chartData.length > 0 ? (\n            <div className=\"c-score__chart\">\n              <CycleScoreChart\n                overallGrade={overallGrade}\n                chartPoints={cycleScores}\n              />\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../../base/base-component';\nimport { ISODNode } from '../../../global/global-interfaces';\nimport { ICycleScoreChartPoint } from '../../charts/cycle-score/cycle-score-interface';\nimport StateScore from '../state-score/state-score';\nimport { IStateOverallScoreProperties } from './state-overall-score-interface';\n\nexport default class StateOverallScore extends BaseComponent<IStateOverallScoreProperties> {\n  public render(): ReactNode {\n    const { data, title, description } = this.props;\n    const dataCycleScores: ICycleScoreChartPoint[] = [];\n    let overall: ISODNode;\n\n    data.nodes.forEach((node): void => {\n      const { cycle, score, weight } = node;\n\n      if (cycle === 'Overall') {\n        overall = node;\n      } else {\n        dataCycleScores.push({\n          cycle,\n          score: score * 100,\n\n          weight,\n        });\n      }\n    });\n\n    const { score, grade } = overall;\n\n    return (\n      <StateScore\n        title={title}\n        description={description}\n        overallGrade={grade}\n        overallScore={Math.round(score * 100)}\n        cycleScores={dataCycleScores}\n      />\n    );\n  }\n}\n","import { graphql, Link } from 'gatsby';\nimport React, { Fragment, ReactNode } from 'react';\nimport { generateUrlForStates } from '../../../../utils';\nimport BaseComponent from '../../../base/base-component';\nimport ContainerBox from '../../../components/container-box/container-box';\nimport ShareContainer from '../../../components/share-container/share-container';\nimport SocialMetadata from '../../../components/social-metadata/social-metadata';\nimport { SocialMetadataType } from '../../../components/social-metadata/social-metadata-enum';\nimport StateOverallScore from '../../../components/states/state-overall-score/state-overall-score';\nimport SvgIcon from '../../../components/svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../../../components/svg-icon/svg-icon-enum';\nimport { Route } from '../../../global/route-enum';\nimport { IEmbeddedOverallStateScoreProperties } from './overall-state-score-interface';\nexport default class EmbeddedOverallStateScore extends BaseComponent<IEmbeddedOverallStateScoreProperties> {\n  protected declareTranslateCollection(): string | undefined {\n    return 'stateOverallTemplate';\n  }\n\n  public render(): ReactNode {\n    const { data, pageContext } = this.props;\n    const { scores } = data;\n    const { state } = pageContext;\n\n    return (\n      <Fragment>\n        <SocialMetadata\n          type={SocialMetadataType.SUMMARY}\n          title={`${state} ${this.translate('scoreTitle')}`}\n          description={this.translate('scoreDescription')}\n          imageResourceFileName={`embedded-overall-score-${generateUrlForStates(\n            state\n          )}.png`}\n        />\n        <ContainerBox className=\"c-section--embed\">\n          <ShareContainer\n            className=\"c-embed__wrap\"\n            shareName={`overall-score-${generateUrlForStates(state)}`}\n          >\n            <div className=\"c-embed__box\">\n              <div className=\"c-embed__state\">{state}</div>\n              <StateOverallScore\n                title={this.translate('scoreTitle')}\n                data={scores}\n              />\n            </div>\n            <div className=\"c-embed__logo\">\n              <Link to={Route.HOME}>\n                <SvgIcon\n                  width=\"111\"\n                  viewBox=\"0 0 208 44\"\n                  paths={[\n                    {\n                      command: SvgIconPathCommand.STATE_OF_DEMOCRACY,\n                      fill: '#0D0C0D',\n                    },\n                    {\n                      fillRule: 'evenodd',\n                      clipRule: 'evenodd',\n                      command: SvgIconPathCommand.LOGO_EAST,\n                      fill: '#C7AFF0',\n                    },\n                    {\n                      fillRule: 'evenodd',\n                      clipRule: 'evenodd',\n                      command: SvgIconPathCommand.LOGO_WEST,\n                      fill: '#4A1D96',\n                    },\n                  ]}\n                />\n              </Link>\n            </div>\n          </ShareContainer>\n        </ContainerBox>\n      </Fragment>\n    );\n  }\n}\n\nexport const query = graphql`\n  query EmbedOverallStateScore($state: String) {\n    scores: allSheetDataGrandTotal(\n      filter: {\n        state: { eq: $state }\n        component: { eq: \"Total\" }\n        measure: { eq: \"GrandTotal\" }\n      }\n    ) {\n      nodes {\n        code\n        state\n        grade\n        cycle\n        score\n        measure\n      }\n    }\n  }\n`;\n"],"names":["ShareContainer","render","this","props","children","shareName","restProperties","style","pointerEvents","BaseComponent","StateScore","title","description","overallGrade","overallScore","cycleScores","chartData","map","cycleScore","cycle","score","weight","console","log","className","grade","size","GradeSize","length","chartPoints","StateOverallScore","overall","data","dataCycleScores","nodes","forEach","node","push","Math","round","EmbeddedOverallStateScore","declareTranslateCollection","pageContext","scores","state","Fragment","type","SocialMetadataType","translate","imageResourceFileName","generateUrlForStates","Link","to","Route","width","viewBox","paths","command","SvgIconPathCommand","fill","fillRule","clipRule"],"sourceRoot":""}