{"version":3,"file":"component---src-pages-index-tsx-4ac76716834a061d79ef.js","mappings":"iRAsBqBA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UA2FlB,OA3FkBA,EACTC,2BAAV,WACE,MAAO,QACR,EAEMC,OAAP,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAsC,GAC5CH,EAAKI,gBAAgBC,MAAMC,SAAQ,SAACC,GAClCJ,EAAYI,EAAQC,OAASD,EAAQE,SAEvC,IACEC,EASEP,EATFO,gBACAC,EAQER,EARFQ,cACAC,EAOET,EAPFS,kBACAC,EAMEV,EANFU,YACAC,EAKEX,EALFW,gBACAC,EAIEZ,EAJFY,YACAC,EAGEb,EAHFa,gBACAC,EAEEd,EAFFc,IACAC,EACEf,EADFe,QAGF,OACE,gBAAC,IAAD,CACEV,MAAOP,KAAKkB,UAAU,SACtBC,YAAanB,KAAKkB,UAAU,eAC5BE,SAAUX,GAEV,gBAAC,IAAD,CACEY,KAAMC,EAAAA,EAAAA,QACNf,MAAOP,KAAKkB,UAAU,SACtBC,YAAanB,KAAKkB,UAAU,eAC5BK,sBAAsB,6BAExB,gBAAC,IAAD,CAAcC,UAAU,iBAAiBC,GAAG,OAC1C,uBAAKD,UAAU,qBACb,uBAAKA,UAAU,uBACb,uBAAKA,UAAU,gBACb,wBAAMA,UAAU,0BACbxB,KAAKkB,UAAU,UAEjBQ,EAAAA,EACD,wBAAMF,UAAU,iBACbxB,KAAKkB,UAAU,gBAItB,uBAAKM,UAAU,sCACb,gBAAC,IAAD,CACEG,aAAa,GACbC,aAAa,wBACbL,sBAAsB,+BAI5B,gBAAC,IAAD,CACEM,QAASC,EAAAA,GAAAA,YACT/B,KAAMA,EACNgC,WAAW,IAEb,uBAAKP,UAAU,sCACb,gBAAC,IAAD,CACEG,aAAa,GACbC,aAAa,wBACbL,sBAAsB,+BAI5B,gBAAC,IAAD,CAAcC,UAAU,mBACtB,gBAAC,IAAD,CACEQ,MAAO,CACL,CACEzB,MAAOG,EACPS,YAAaR,GAEf,CACEJ,MAAOK,EACPO,YAAaN,GAEf,CACEN,MAAOO,EACPK,YAAaJ,EACbkB,aAAchB,EACdiB,cAAelB,SAO5B,EA3FkBpB,CAAauC,EAAAA","sources":["webpack://sod/./src/pages/index.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../base/base-component';\nimport SODMapChart from '../components/charts/map/sod/sod-map-chart';\nimport ContainerBox from '../components/container-box/container-box';\nimport Layout from '../components/layout/layout';\nimport Share from '../components/share/share';\nimport SocialMetadata from '../components/social-metadata/social-metadata';\nimport { SocialMetadataType } from '../components/social-metadata/social-metadata-enum';\nimport WhatToDoHome from '../components/what-to-do-home/what-to-do-home';\nimport { SODMeasures } from '../global/global-enum';\nimport '../global/locale/en-us';\nimport { gradeSVG } from '../global/svg/grades';\nimport {\n  ICriteriaData,\n  IPageContentProperties,\n} from '../templates/criteria/criteria-interface';\n\ninterface IHomeProperties {\n  readonly data: ICriteriaData;\n}\n\nexport default class Home extends BaseComponent<IHomeProperties> {\n  protected declareTranslateCollection(): string {\n    return 'home';\n  }\n\n  public render(): ReactNode {\n    const { data } = this.props;\n    const pageContent: IPageContentProperties = {};\n    data.homePageContent.nodes.forEach((content) => {\n      pageContent[content.title] = content.value;\n    });\n    const {\n      overallSubtitle,\n      findYourState,\n      findYourStateDesc,\n      getTheFacts,\n      getTheFactsDesc,\n      getInvolved,\n      getInvolvedDesc,\n      CTA,\n      CTALink,\n    } = pageContent;\n\n    return (\n      <Layout\n        title={this.translate('title')}\n        description={this.translate('description')}\n        subtitle={overallSubtitle}\n      >\n        <SocialMetadata\n          type={SocialMetadataType.SUMMARY}\n          title={this.translate('title')}\n          description={this.translate('description')}\n          imageResourceFileName=\"embedded-overall-map.png\"\n        />\n        <ContainerBox className=\"c-section--map\" id=\"map\">\n          <div className=\"row c-map-details\">\n            <div className=\"col-md-8 c-map-info\">\n              <div className=\"c-map__grade\">\n                <span className=\"c-grade__text is-title\">\n                  {this.translate('grade')}\n                </span>\n                {gradeSVG}\n                <span className=\"c-grade__text\">\n                  {this.translate('gradeText')}\n                </span>\n              </div>\n            </div>\n            <div className=\"col-md-4 c-map-share u-hide-mobile\">\n              <Share\n                absoluteLink=\"\"\n                embeddedLink=\"/embedded/map/overall\"\n                imageResourceFileName=\"embedded-overall-map.png\"\n              />\n            </div>\n          </div>\n          <SODMapChart\n            measure={SODMeasures.GRAND_TOTAL}\n            data={data}\n            isTooltip={true}\n          />\n          <div className=\"c-map-share is-full u-hide-desktop\">\n            <Share\n              absoluteLink=\"\"\n              embeddedLink=\"/embedded/map/overall\"\n              imageResourceFileName=\"embedded-overall-map.png\"\n            />\n          </div>\n        </ContainerBox>\n        <ContainerBox className=\"c-section--todo\">\n          <WhatToDoHome\n            items={[\n              {\n                title: findYourState,\n                description: findYourStateDesc,\n              },\n              {\n                title: getTheFacts,\n                description: getTheFactsDesc,\n              },\n              {\n                title: getInvolved,\n                description: getInvolvedDesc,\n                moreInfoLink: CTALink,\n                moreInfoTitle: CTA,\n              },\n            ]}\n          />\n        </ContainerBox>\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  query GetGrandTotalData {\n    all: allSheetDataGrandTotal {\n      nodes {\n        code\n        state\n        grade\n      }\n    }\n    allParticipation: allSheetDataParticipation(\n      filter: { cycle: { eq: \"Overall\" }, component: { eq: \"Total\" } }\n    ) {\n      nodes {\n        code\n        state\n        grade\n      }\n    }\n    allCompetition: allSheetDataCompetition(\n      filter: { cycle: { eq: \"Overall\" }, component: { eq: \"Total\" } }\n    ) {\n      nodes {\n        code\n        state\n        grade\n      }\n    }\n    allRepresentation: allSheetDataRepresentation(\n      filter: { cycle: { eq: \"Overall\" }, component: { eq: \"Total\" } }\n    ) {\n      nodes {\n        code\n        state\n        grade\n      }\n    }\n    allPolarization: allSheetDataPolarization(\n      filter: { cycle: { eq: \"Overall\" }, component: { eq: \"Total\" } }\n    ) {\n      nodes {\n        code\n        state\n        grade\n      }\n    }\n    homePageContent: allSheetDataHomepageContent {\n      nodes {\n        title\n        value\n      }\n    }\n  }\n`;\n"],"names":["Home","declareTranslateCollection","render","data","this","props","pageContent","homePageContent","nodes","forEach","content","title","value","overallSubtitle","findYourState","findYourStateDesc","getTheFacts","getTheFactsDesc","getInvolved","getInvolvedDesc","CTA","CTALink","translate","description","subtitle","type","SocialMetadataType","imageResourceFileName","className","id","gradeSVG","absoluteLink","embeddedLink","measure","SODMeasures","isTooltip","items","moreInfoLink","moreInfoTitle","BaseComponent"],"sourceRoot":""}