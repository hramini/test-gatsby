{"version":3,"file":"component---src-templates-media-post-media-post-tsx-09d621f72d22f0545949.js","mappings":"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","sources":["webpack://sod/./src/components/bread-crumb/bread-crumb.tsx","webpack://sod/./src/components/join-us/join-us.tsx","webpack://sod/./src/components/media-item-grid/media-item-grid.tsx","webpack://sod/./src/components/media-post-item/media-post-item.tsx","webpack://sod/./src/components/social-metadata/social-metadata-enum.tsx","webpack://sod/./src/components/social-metadata/social-metadata.tsx","webpack://sod/./src/components/solid-link/solid-link-enum.tsx","webpack://sod/./src/components/solid-link/solid-link.tsx","webpack://sod/./src/templates/media-post/media-post.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React, { ReactNode } from \"react\";\nimport BaseComponent from \"../../base/base-component\";\nimport SvgIcon from \"../svg-icon/svg-icon\";\nimport { SvgIconPathCommand } from \"../svg-icon/svg-icon-enum\";\nimport { IBreadCrumbProperties, ICrumbItem } from \"./bread-crumb-interface\";\nimport \"./bread-crumb.scss\";\n\nexport default class BreadCrumb extends BaseComponent<IBreadCrumbProperties> {\n  public render(): ReactNode {\n    const { crumbItems } = this.props;\n\n    return (\n      <ul className=\"c-breadcrumb\">\n        {crumbItems.map((crumb: ICrumbItem, index: number) => {\n          return (\n            <li key={index}>\n              <Link to={crumb.location}> {crumb.label} </Link>\n              <SvgIcon\n                width=\"6\"\n                height=\"10\"\n                viewBox=\"0 0 6 10\"\n                paths={[\n                  {\n                    command: SvgIconPathCommand.CHEVRON_RIGHT,\n                    fill: \"#0D0C0D\",\n                  },\n                ]}\n              />\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport GravityForm from '../gravity-forms/gravity-forms';\nimport { IJoinUsProps } from './join-us-interface';\nimport './join-us.scss';\n\nexport default class JoinUs extends BaseComponent<IJoinUsProps> {\n  public render(): ReactNode {\n    const { form } = this.props;\n    return (\n      <div className=\"c-joinus\">\n        <div className=\"row c-joinus__wrapper\">\n          <div className=\"col-lg-6 c-joinus__col\">\n            <h3 className=\"c-joinus__title\">Join us</h3>\n            <p className=\"c-joinus__text\">\n              Stay up to date on our movement, and learn how you can get\n              involved and make a difference.\n            </p>\n          </div>\n          <div className=\"col-lg-6 c-joinus__col\">\n            <GravityForm form={form} formClassName=\"c-form-newsletter\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport MediaPostItem from '../media-post-item/media-post-item';\nimport SolidButton from '../solid-button/solid-button';\nimport {\n  IMediaItemGridProperties,\n  IMediaItemGridState,\n} from './media-item-grid-interface';\n\nexport default class MediaItemGrid extends BaseComponent<\n  IMediaItemGridProperties,\n  IMediaItemGridState\n> {\n  public constructor(props: IMediaItemGridProperties) {\n    super(props);\n\n    this.state = {\n      latestIndex:\n        props.showMoreCount > props.items.length\n          ? props.items.length\n          : props.showMoreCount,\n    };\n  }\n\n  public render(): ReactNode {\n    const { items, showMoreCount } = this.props;\n    const { latestIndex } = this.state;\n    let showMoreItems = [];\n\n    if (latestIndex >= 0) {\n      showMoreItems = items.slice(0, latestIndex);\n    }\n    return (\n      <div className='c-media-posts'>\n        {showMoreItems.length > 0 && (\n          <div className=\"row c-posts-all\">\n            {showMoreItems.map((mediaItem, index) => {\n              return <MediaPostItem item={mediaItem} key={index} />;\n            })}\n          </div>\n        )}\n\n        {latestIndex < items.length - 1 && (\n          <SolidButton\n            onClick={(): void => {\n              this.setState((prevState) => {\n                return {\n                  latestIndex:\n                    prevState.latestIndex + showMoreCount > items.length\n                      ? items.length\n                      : prevState.latestIndex + showMoreCount,\n                };\n              });\n            }}\n          >\n            Show More\n          </SolidButton>\n        )}\n      </div>\n    );\n  }\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport SolidLink from '../solid-link/solid-link';\nimport { SolidLinkColorSchemas } from '../solid-link/solid-link-enum';\nimport SvgIcon from '../svg-icon/svg-icon';\nimport { SvgIconPathCommand } from '../svg-icon/svg-icon-enum';\nimport {\n  IMediaPostItemProperties,\n  IMediaPostItemStates,\n} from './media-post-item-interface';\n\nexport default class MediaPostItem extends BaseComponent<\n  IMediaPostItemProperties,\n  IMediaPostItemStates\n> {\n  public constructor(props: IMediaPostItemProperties) {\n    super(props);\n    this.state = {\n      imageIsReady: false,\n    };\n  }\n\n  componentDidMount(): void {\n    const img = new Image();\n    img.onload = () => this.setState({ imageIsReady: true });\n    img.src = this.props.item.featuredImage?.node.sourceUrl;\n  }\n  public render(): ReactNode {\n    const { item } = this.props;\n    const { imageIsReady } = this.state;\n\n    return (\n      <div className=\"col-lg-3 col-md-6 card c-card_items\">\n        <div className=\"c-card__container\">\n          <div className=\"media media--transparent media--card media--hover-effect c-card__img\">\n            {imageIsReady ? (\n              <img\n                srcSet={item.featuredImage?.node.srcSet}\n                sizes=\"(min-width: 1504px) 702px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)\"\n                src={item.featuredImage?.node.sourceUrl}\n                alt={item.featuredImage?.node.altText}\n                loading=\"lazy\"\n                width={item.featuredImage?.node.mediaDetails.width}\n                height={item.featuredImage?.node.mediaDetails.height}\n              />\n            ) : (\n              <div className=\"loading-overlay__spinner\">\n                <svg aria-hidden=\"true\" focusable=\"false\" role=\"presentation\" className=\"spinner\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <circle className=\"path\" fill=\"none\" strokeWidth=\"6\" cx=\"33\" cy=\"33\" r=\"30\"></circle>\n                </svg>\n              </div>\n            )}\n            <Link\n              className=\"c-link\"\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n            ></Link>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              {item.categories?.nodes[0].name}\n            </SolidLink>\n          </div>\n          <div className=\"c-media-featured__wrapper\">\n            <div className=\"c-card__details\">\n              <span>{new Date(item.date).toDateString()}</span>\n              <span>BY {item.author?.node.name}</span>\n            </div>\n            <h6 className=\"c-card__title\">\n              <Link\n                className=\"c-link\"\n                to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              >\n                {item.title}\n              </Link>\n            </h6>\n            <SolidLink\n              to={`/media${item.categories?.nodes[0].uri}${item.slug}`}\n              colorSchema={SolidLinkColorSchemas.HIGHLIGHTED}\n            >\n              Read More\n              <SvgIcon\n                width=\"13\"\n                viewBox=\"0 0 20 14\"\n                paths={[\n                  { command: SvgIconPathCommand.ARROW_RIGHT, fill: '#4A1D96' },\n                ]}\n              />\n            </SolidLink>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","export enum SocialMetadataType {\n  SUMMARY = 'summary',\n  SUMMARY_LARGE_IMAGE = 'summary_large_image',\n  OBJECT = 'object',\n}\n","import React, { ReactNode } from 'react';\nimport { Helmet } from 'react-helmet';\nimport BaseComponent from '../../base/base-component';\nimport { SocialMetadataType } from './social-metadata-enum';\nimport { ISocialMetadataProperties } from './social-metadata-interface';\n\nexport default class SocialMetadata extends BaseComponent<ISocialMetadataProperties> {\n  public render(): ReactNode {\n    const { title, description, imageResourceFileName, type } = this.props;\n    const imageSourceContent: string = `${this.getResourcesPath()}/${imageResourceFileName}`;\n\n    return (\n      <Helmet\n        meta={[\n          {\n            property: 'og:title',\n            content: title,\n          },\n          {\n            property: 'og:type',\n            content: SocialMetadataType.OBJECT,\n          },\n          {\n            property: 'og:description',\n            content: description,\n          },\n          {\n            property: 'og:image',\n            content: imageSourceContent,\n          },\n          {\n            name: 'twitter:card',\n            content: type,\n          },\n          {\n            name: 'twitter:title',\n            content: title,\n          },\n          {\n            name: 'twitter:image:src',\n            content: imageSourceContent,\n          },\n          {\n            name: 'twitter:description',\n            content: description,\n          },\n        ]}\n      />\n    );\n  }\n\n  protected getResourcesPath(): string {\n    return `${process.env.SITE_URL}/static/images`;\n  }\n}\n","export enum SolidLinkColorSchemas {\n  PURPLE = 'purple',\n  WHITE = 'white',\n  TRANSPARENT = 'transparent',\n  HIGHLIGHTED = 'highlighted',\n}\n","import { Link } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport { SolidLinkColorSchemas } from './solid-link-enum';\nimport { ISolidLinkProperties } from './solid-link-interface';\nimport './solid-link.scss';\n\nexport default class SolidLink extends BaseComponent<ISolidLinkProperties> {\n  public render(): ReactNode {\n    const { colorSchema = SolidLinkColorSchemas.PURPLE, to } = this.props;\n    const schemaClass: string = `is-${colorSchema}`;\n    const classNames: string = ['c-btn', schemaClass].join(' ');\n\n    return (\n      <Link className={classNames} to={to}>\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n","import { graphql } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BaseComponent from '../../base/base-component';\nimport BreadCrumb from '../../components/bread-crumb/bread-crumb';\nimport ContainerBox from '../../components/container-box/container-box';\nimport JoinUs from '../../components/join-us/join-us';\nimport MediaItemGrid from '../../components/media-item-grid/media-item-grid';\nimport Share from '../../components/share/share';\nimport SocialMetadata from '../../components/social-metadata/social-metadata';\nimport { SocialMetadataType } from '../../components/social-metadata/social-metadata-enum';\nimport WordPressPageLayout from '../../components/wordpress-page-layout/wordpress-page-layout';\nimport { IMediaPostTemplateProperties } from './media-post-interface';\n\nexport default class MediaPostTemplate extends BaseComponent<IMediaPostTemplateProperties> {\n  public render(): ReactNode {\n    const { [0]: form } = this.props.data.form.nodes;\n    const { post, relatedPosts } = this.props.data;\n    return (\n      <WordPressPageLayout title={post.title}>\n        <SocialMetadata\n          type={SocialMetadataType.SUMMARY}\n          title={post.title}\n          description={post.title}\n          imageResourceFileName={post.featuredImage?.node.sourceUrl}\n        />\n        <ContainerBox className=\"c-section--pageheader\">\n          <div className=\"c-pageheader\">\n            <BreadCrumb\n              crumbItems={[\n                {\n                  label: 'State of Democracy',\n                  location: '/',\n                },\n                {\n                  label: 'Media',\n                  location: '/media',\n                },\n                {\n                  label: post.categories?.nodes[0].name,\n                  location: `/media${post.categories?.nodes[0].uri}`,\n                },\n              ]}\n            />\n            <div className=\"c-section\">\n              <h1 className=\"c-section__title\">{post.title}</h1>\n            </div>\n          </div>\n        </ContainerBox>\n        <ContainerBox className='c-section--article u-media-width'>\n          <article itemScope itemType=\"http://schema.org/Article\">\n            <div className='c-article__hero'>\n              <div className=\"media media--transparent media--landscape\">\n                <img srcSet={post.featuredImage?.node.srcSet}\n                    sizes=\"(min-width: 1504px) 702px, (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)\"\n                    src={post.featuredImage?.node.sourceUrl}\n                    alt={post.featuredImage?.node.altText}\n                    loading=\"lazy\"\n                    width={post.featuredImage?.node.mediaDetails.width}\n                    height={post.featuredImage?.node.mediaDetails.height} />\n              </div>\n            </div>\n            <div className=\"c-article__wrapper\">\n              <div className=\"c-article__col\">\n                <div className=\"c-article__share\">\n                  <div className=\"c-article-share__title\">Share</div>\n                  <Share\n                    description={post.title}\n                    absoluteLink={`/media${post.categories?.nodes[0].uri}${post.slug}`}\n                    imageResourceFileName=\"\"\n                    isExpanded={true}\n                  />\n                </div>\n              </div>\n              <div className=\"c-article__col\">\n                <div className='c-article__author'>\n                  <img\n                    alt={post.author?.node.name}\n                    src={post.author?.node.avatar.url}\n                    width={post.author?.node.avatar.width}\n                    height={post.author?.node.avatar.height}\n                    loading='lazy'\n                    className='c-article__author-image'\n                  />\n                  <span>{`BY ${post.author?.node.name}`}</span>\n                  <span>{new Date(post.date).toDateString()}</span>\n                </div>\n                <div className='c-article__content s-content'\n                  dangerouslySetInnerHTML={{ __html: post.content }}\n                ></div>\n              </div>\n            </div>\n              \n          </article>\n        </ContainerBox>\n        <ContainerBox className='c-section--joinus u-media-width'>\n          <JoinUs form={form} />\n        </ContainerBox>\n        <ContainerBox className='c-section--related u-media-width'>\n        <div className=\"c-section\">\n          <h2 className=\"c-section__title\">Related Articles</h2>\n        </div>\n        <MediaItemGrid items={relatedPosts?.nodes} showMoreCount={4} />\n        </ContainerBox>\n      </WordPressPageLayout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query MediaPost($postId: String, $categoryId: String) {\n    form: allGfForm(filter: { slug: { eq: \"join-us\" } }) {\n      nodes {\n        apiURL\n        formFields {\n          isRequired\n          label\n          type\n          placeholder\n          id\n          cssClass\n        }\n        title\n        button {\n          text\n        }\n      }\n    }\n    post: wpPost(\n      id: { eq: $postId }\n      categories: { nodes: { elemMatch: { id: { eq: $categoryId } } } }\n    ) {\n      id\n      title\n      slug\n      uri\n      date\n      content\n      author {\n        node {\n          name\n          avatar {\n            url\n            width\n            height\n          }\n        }\n      }\n      featuredImage {\n        node {\n          sourceUrl\n          altText\n          srcSet\n          sizes\n          mediaDetails {\n            height\n            width\n          }\n        }\n      }\n      categories {\n        nodes {\n          slug\n          uri\n          name\n        }\n      }\n    }\n    relatedPosts: allWpPost(\n      sort: { order: DESC, fields: date }\n      filter: {\n        categories: { nodes: { elemMatch: { id: { eq: $categoryId } } } }\n      }\n      limit: 4\n    ) {\n      nodes {\n        uri\n        title\n        slug\n        id\n        featuredImage {\n          node {\n            sourceUrl\n            altText\n            srcSet\n            sizes\n            mediaDetails {\n              height\n              width\n            }\n          }\n        }\n        author {\n          node {\n            name\n          }\n        }\n        date\n        categories {\n          nodes {\n            name\n            uri\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["BreadCrumb","render","crumbItems","this","props","className","map","crumb","index","key","Link","to","location","label","width","height","viewBox","paths","command","SvgIconPathCommand","fill","BaseComponent","JoinUs","form","formClassName","MediaItemGrid","state","latestIndex","showMoreCount","items","length","showMoreItems","slice","mediaItem","item","onClick","setState","prevState","MediaPostItem","imageIsReady","componentDidMount","img","Image","onload","src","featuredImage","node","sourceUrl","srcSet","sizes","alt","altText","loading","mediaDetails","focusable","role","xmlns","strokeWidth","cx","cy","r","categories","nodes","uri","slug","colorSchema","SolidLinkColorSchemas","name","Date","date","toDateString","author","title","SocialMetadataType","SocialMetadata","description","imageResourceFileName","type","imageSourceContent","getResourcesPath","meta","property","content","process","SolidLink","classNames","join","children","MediaPostTemplate","data","post","relatedPosts","itemScope","itemType","absoluteLink","isExpanded","avatar","url","dangerouslySetInnerHTML","__html"],"sourceRoot":""}